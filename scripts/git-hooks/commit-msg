#!/bin/bash
# From Gerrit Code Review 2.13.5
# 12333
# Part of Gerrit Code Review (https://www.gerritcodereview.com/)
#
# Copyright (C) 2009 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

unset GREP_OPTIONS

CHANGE_ID_AFTER="Bug|Issue|Test|Feature|Fixes|Fixed"
MSG="$1"



function print_hint() {
    echo "
错误 >>> 请求参照标准格式: <type>[optional scope][!|?]: <description>
错误 >>> 或者参考 wiki: http://wiki.bigo.sg:8090/pages/viewpage.action?pageId=115737742"

}
## 检查 commit 信息的格式.
firstLine=`head -n 1 "$MSG"`

if [[ -z "$firstLine" ]];
then
    echo "commit fail, first line of commit message can not be empty."
    exit 1
fi

# 忽略 merge 类型的提交
echo "$firstLine" | grep -i -E "^(merge|revert)" 1>/dev/null

if [[ $? -eq 0 ]];
then
    exit 0
fi

echo "提交的首行为:"
echo "    $firstLine"
echo

types="(fix|story|feat|perf|refactor|style|docs|i18n|test|stat|chore)"
scopes="(ad|detail|flutter|live|login|im|index|media|news|prod|push|share|search)"

# 尝试识别 type
if ! echo "$firstLine" | grep -E "^[a-zA-Z0-9]+" 1>/dev/null
then
    echo "错误 >>> 无法识别提交的类型."
    print_hint
    exit 1
fi

# 提取 type 并判断是否合法
type=`echo "$firstLine" | sed -E -e "s/^([a-zA-Z0-9]+).*/\1/g"`

if ! echo "$type" | grep -E "^$types" 1>/dev/null
then
    echo "错误 >>> \"$type\" 不是合法的类型"
    print_hint
    exit 1
fi

# 判断是否有 scope
if echo "$firstLine" | grep -E "^$types(\(.*\))" 1>/dev/null
then
    # 提取 scope 并检查是否合法
    scope=`echo "$firstLine" | sed -E -e "s/^$types\((.*)\).*/\2/g"`
    if [[ -z ${scope} ]];
    then
        echo "错误 >>> 提交范围不能为空"
        print_hint
        exit 1
    fi
    if ! echo "$scope" | grep -E "^$scopes" 1>/dev/null
    then
        echo "错误 >>> \"$scope\" 不是合法的范围"
        print_hint
        exit 1
    fi
fi

if ! echo "$firstLine" | grep -E "^$types(\($scopes\))?(\?|\!)?:." 1>/dev/null
then
    space=`echo "$firstLine" | sed -E -e "s/^$types(\($scopes\))?(\?|\!)?:(.).*/\5/g"`
    if [[ ${space} != " " ]];
    then
        echo "错误 >>> \":\" 后面必须要有空格"
        print_hint
        exit 1
    fi
fi

if ! echo  "$firstLine" | grep -E "^$types(\($scopes\))?(\?|\!)?: " 1>/dev/null
then
    echo "错误 >>> 格式错误."
    print_hint
    exit 1
fi

if ! echo "$firstLine" | grep -E "^$types(\($scopes\))?(\?|\!)?: .{6}" 1>/dev/null
then
    echo "错误 >>> 首行太短, 至少需要 6 个字符."
    print_hint
    exit 1
fi

if ! echo "$firstLine" | grep -E "^$types(\($scopes\))?(\?|\!)?: .{6,60}$" 1>/dev/null
then
    echo "错误 >>> 首行太长, 最多只能 60 字符."
    print_hint
    exit 1
fi

lineCount=`cat "$MSG" | wc -l | sed -e 's/^[[:space:]]*//'`
if [[ ${lineCount} -eq 1 ]]; then
    exit 0
fi

secondLine=`head -n 2 "$MSG" | tail -n 1 | sed -e 's/^[[:space:]]*//'`
if [[ -n "$secondLine" ]];
then
    echo "错误 >>> 第二行必须为空"
    print_hint
    exit 1
fi

exit 0


