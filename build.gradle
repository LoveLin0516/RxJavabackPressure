// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.21'
    repositories {
        google()
        jcenter()
    }

    ext {
        // rxJava 版本
        rx_java_version = '2.1.5'
        // rxAndroid 版本
        rx_andriod_version = '2.0.1'
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 更新Git Hook
 */
task updateGitHook(group: "fly") doLast{
    //要更新的文件列表
    def fileNames = [
            'applypatch-msg',
            'commit-msg',
            'post-update',
            'pre-applypatch',
            'pre-commit',
            'prepare-commit-msg',
            'pre-push',
            'pre-rebase',
            'pre-receive',
            'update',
    ]

    copy{
        from("${project.rootDir}/scripts${File.separator}git-hooks${File.separator}commit-msg")
        into("${project.rootDir}/.git${File.separator}hooks")
    }

    try {
        println "更新 ${name} 成功"
        "chmod +x .git/hooks/commit-msg".execute()
    }catch(ignored){

    }

//    fileNames.each { name ->
//        def file = new File(".git/hooks/${name}")
//        try {
//            new URL("http://o.mail.163.com/app/webmail/aIntelligent/git-hooks/${name}").withInputStream { i ->
//                file.withOutputStream {
//                    it << i
//                }
//            }
//            println "更新 ${name} 成功"
//            "chmod +x .git/hooks/${name}".execute()
//        } catch (ignored) {
//        }
//    }
}
